<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.wd.dao.CBondRatingDao">
	<select id="queryAll" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondRatingEntity" >
		select * from ${tableName}
	</select>
    <select id="queryList" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondRatingEntity">
		select 
			* 
		from 
		( 
			select 
				rownum rowx, x.* 
			from 
				${tableName} x
			<where>
				<if test="offset != null and limit != null ">
					rownum &lt;= ${offset} + ${limit}
				</if>
			</where>
			order by 
				object_id desc 
		)
		<if test="offset != null ">
			where 
				rowx &gt; ${offset}
		</if>
    </select> 	
	<select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
			select count(1) from ${tableName} 
    </select>
    <select id="queryLatest" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondRatingEntity">
        select * from ${tableName} 
                <where>
                    <if test="latest !=null">
                       opdate > #{latest}
                    </if>
                </where>    
     </select>
    <select id="queryFirst" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondRatingEntity">
			select * from (select * from ${tableName} order by opdate desc) where rownum=1 
    </select>
	<delete id="deleteAll">
		delete from CBONDRATING
	</delete>
	 <update id="updateStatus"> 
		update CBONDRATING set status = case when status = 1 then 0 when status = 0 then 1 end
	</update>
	<delete id="deleteStatus">
		delete from CBONDRATING where status = 0 
	</delete>
	
	<insert id="save" parameterType="io.renren.modules.wd.entity.CBondRatingEntity">
		insert into CBONDRATING
		(
			object_id, 
			s_info_windcode, 
			ann_dt, 
			b_rate_style,
			b_info_creditrating,
			b_info_creditratingagency, 
			b_info_creditratingexplain,
			b_info_precreditrating,
			b_creditrating_change,
			ann_dt2,
			opdate,
			opmode,
			imp_date,
			imp_time,
			status
		)
		values
		(
			#{objectId,jdbcType=VARCHAR}, 
			#{sInfoWindcode,jdbcType=VARCHAR}, 
			#{annDt,jdbcType=VARCHAR}, 
			#{bRateStyle,jdbcType=VARCHAR}, 
			#{bInfoCreditrating,jdbcType=VARCHAR},
			#{bInfoCreditratingagency,jdbcType=VARCHAR},
			#{bInfoCreditratingexplain,jdbcType=VARCHAR},
			#{bInfoPrecreditrating,jdbcType=VARCHAR},
			#{bCreditratingChange,jdbcType=VARCHAR},
			#{annDt2,jdbcType=VARCHAR},
			#{opdate,jdbcType=TIMESTAMP},
			#{opmode,jdbcType=VARCHAR},
			#{impDate,jdbcType=CHAR},
			#{impTime,jdbcType=CHAR},
			#{status,jdbcType=INTEGER}	
		)
	</insert>
	<insert id="saveBatch" parameterType="java.util.List">
		insert into CBONDRATING
		(
			object_id, 
			s_info_windcode, 
			ann_dt, 
			b_rate_style,
			b_info_creditrating,
			b_info_creditratingagency, 
			b_info_creditratingexplain,
			b_info_precreditrating,
			b_creditrating_change,
			ann_dt2,
			opdate,
			opmode,
			imp_date,
			imp_time,
			status
		)
	<foreach item="item" collection="list" index="index" separator="union all" >
		(
			select
			#{item.objectId,jdbcType=VARCHAR}, 
			#{item.sInfoWindcode,jdbcType=VARCHAR}, 
			#{item.annDt,jdbcType=VARCHAR}, 
			#{item.bRateStyle,jdbcType=VARCHAR}, 
			#{item.bInfoCreditrating,jdbcType=VARCHAR},
			#{item.bInfoCreditratingagency,jdbcType=VARCHAR},
			#{item.bInfoCreditratingexplain,jdbcType=VARCHAR},
			#{item.bInfoPrecreditrating,jdbcType=VARCHAR},
			#{item.bCreditratingChange,jdbcType=VARCHAR},
			#{item.annDt2,jdbcType=VARCHAR},
			#{item.opdate,jdbcType=TIMESTAMP},
			#{item.opmode,jdbcType=VARCHAR},
			#{item.impDate,jdbcType=CHAR},
			#{item.impTime,jdbcType=CHAR},
			#{item.status,jdbcType=INTEGER}	
			from dual
			)
		</foreach>
	</insert> 
</mapper>
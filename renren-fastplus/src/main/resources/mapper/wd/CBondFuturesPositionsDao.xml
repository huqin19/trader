<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.wd.dao.CBondFuturesPositionsDao">
	<select id="queryList" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
		select 
			* 
		from 
		( 
			select 
				rownum rowx, x.* 
			from 
				${tableName} x
			<where>
				<if test="offset != null and limit != null ">
					rownum &lt;= ${offset} + ${limit}
				</if>
			</where>
			order by 
				object_id desc 
		)
		<if test="offset != null ">
			where 
				rowx &gt; ${offset}
		</if>
    </select>
    
     <select id="queryAll" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
        select * from ${tableName}   
    </select>
    
	<select id="queryLatest" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
        select * from ${tableName} 
                <where>
                    <if test="latest !=null">
						opdate > #{latest}
                    </if>
                </where>    
    </select>
    
    <select id="queryByTdDate" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
        select * from ${tableName} where trade_dt = #{tradeDt}    
    </select>
    
    <select id="queryFirst" parameterType="java.util.HashMap" resultType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
			select * from (select * from ${tableName} order by opdate desc) where rownum=1 
    </select>
	
    <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
			select count(1) from ${tableName}
				<where>
             		<if test="status !=null ">
						status = #{status}
               		</if>
        		</where>  
    </select>
    
    <delete id="deleteAll">
		delete from CBONDFUTURESPOSITIONS
	</delete>
	
	<update id="updateStatus"> 
		update CBONDFUTURESPOSITIONS set status = case when status = 1 then 0 when status = 0 then 1 end
	</update>
	<delete id="deleteStatus">
		delete from CBONDFUTURESPOSITIONS where status = 0 
	</delete>
	<insert id="save" parameterType="io.renren.modules.wd.entity.CBondFuturesPositionsEntity">
		insert into CBONDFUTURESPOSITIONS
		(
			object_id, 
			s_info_windcode, 
			trade_dt, 
			fs_info_membername,
			fs_info_type,
			fs_info_positionsnum, 
			fs_info_rank,
			s_oi_positionsnumc,
			opdate,
			opmode,
			imp_date,
			imp_time,
			status
		)
		values
		(
			#{objectId,jdbcType=VARCHAR}, 
			#{sInfoWindcode,jdbcType=VARCHAR}, 
			#{tradeDt,jdbcType=VARCHAR}, 
			#{fsInfoMembername,jdbcType=VARCHAR}, 
			#{fsInfoType,jdbcType=VARCHAR},
			#{fsInfoPositionsnum,jdbcType=NUMERIC},
			#{fsInfoRank,jdbcType=NUMERIC},
			#{sOiPositionsnumc,jdbcType=NUMERIC},
			#{opdate,jdbcType=DATE},
			#{opmode,jdbcType=VARCHAR},
			#{impDate,jdbcType=CHAR},
			#{impTime,jdbcType=CHAR},
			#{status,jdbcType=INTEGER}	
		)
	</insert>
	<insert id="saveBatch" parameterType="java.util.List">
		insert into CBONDFUTURESPOSITIONS
		(
			object_id, 
			s_info_windcode, 
			trade_dt, 
			fs_info_membername,
			fs_info_type,
			fs_info_positionsnum, 
			fs_info_rank,
			s_oi_positionsnumc,
			opdate,
			opmode,
			imp_date,
			imp_time,
			status
		)
	<foreach item="item" collection="list" index="index" separator="union all" >
		(
			select
			#{item.objectId,jdbcType=VARCHAR}, 
			#{item.sInfoWindcode,jdbcType=VARCHAR}, 
			#{item.tradeDt,jdbcType=VARCHAR}, 
			#{item.fsInfoMembername,jdbcType=VARCHAR}, 
			#{item.fsInfoType,jdbcType=VARCHAR},
			#{item.fsInfoPositionsnum,jdbcType=NUMERIC},
			#{item.fsInfoRank,jdbcType=NUMERIC},
			#{item.sOiPositionsnumc,jdbcType=NUMERIC},
			#{item.opdate,jdbcType=DATE},
			#{item.opmode,jdbcType=VARCHAR},
			#{item.impDate,jdbcType=CHAR},
			#{item.impTime,jdbcType=CHAR},
			#{item.status,jdbcType=INTEGER}	
			from dual
			)
		</foreach>
	</insert> 
</mapper>